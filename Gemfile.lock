PATH
  remote: .
  specs:
    resque_spec (0.14.4)
      resque (>= 1.19.0)
      rspec-core (>= 3.0.0.beta)
      rspec-expectations (>= 3.0.0.beta)
      rspec-mocks (>= 3.0.0.beta)

GEM
  remote: https://rubygems.org/
  specs:
    atomic (1.1.14)
    coderay (1.1.0)
    columnize (0.3.6)
    debugger (1.6.5)
      columnize (>= 0.3.1)
      debugger-linecache (~> 1.2.0)
      debugger-ruby_core_source (~> 1.3.1)
    debugger-linecache (1.2.0)
    debugger-ruby_core_source (1.3.1)
    diff-lcs (1.2.5)
    method_source (0.8.2)
    mono_logger (1.1.0)
    multi_json (1.8.4)
    pry (0.9.12.4)
      coderay (~> 1.0)
      method_source (~> 0.8)
      slop (~> 3.4)
    pry-debugger (0.2.2)
      debugger (~> 1.3)
      pry (~> 0.9.10)
    rack (1.5.2)
    rack-protection (1.5.2)
      rack
    rake (10.1.1)
    redis (3.0.7)
    redis-namespace (1.4.1)
      redis (~> 3.0.4)
    resque (1.25.1)
      mono_logger (~> 1.0)
      multi_json (~> 1.0)
      redis-namespace (~> 1.2)
      sinatra (>= 0.9.2)
      vegas (~> 0.1.2)
    resque-scheduler (2.3.1)
      redis (>= 3.0.0)
      resque (~> 1.25)
      rufus-scheduler (~> 2.0)
    rspec (3.0.0.beta1)
      rspec-core (= 3.0.0.beta1)
      rspec-expectations (= 3.0.0.beta1)
      rspec-mocks (= 3.0.0.beta1)
    rspec-collection_matchers (0.0.2)
      rspec-expectations (>= 2.99.0.beta1)
    rspec-core (3.0.0.beta1)
    rspec-expectations (3.0.0.beta1)
      diff-lcs (>= 1.1.3, < 2.0)
      rspec-support (= 3.0.0.beta1)
    rspec-mocks (3.0.0.beta1)
    rspec-support (3.0.0.beta1)
    rufus-scheduler (2.0.24)
      tzinfo (>= 0.3.22)
    sinatra (1.4.4)
      rack (~> 1.4)
      rack-protection (~> 1.4)
      tilt (~> 1.3, >= 1.3.4)
    slop (3.4.7)
    thread_safe (0.1.3)
      atomic
    tilt (1.4.1)
    timecop (0.7.1)
    tzinfo (1.1.0)
      thread_safe (~> 0.1)
    vegas (0.1.11)
      rack (>= 1.0.0)

PLATFORMS
  ruby

DEPENDENCIES
  pry
  pry-debugger
  rake
  resque-scheduler
  resque_spec!
  rspec (>= 3.0.0.beta)
  rspec-collection_matchers (>= 0.0.1)
  timecop
